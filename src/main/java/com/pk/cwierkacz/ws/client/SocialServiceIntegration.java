package com.pk.cwierkacz.ws.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;

import pl.edu.pk.ias.types.AccountsRequest;
import pl.edu.pk.ias.types.AccountsResponse;
import pl.edu.pk.ias.types.GetItemsPreviewsRequest;
import pl.edu.pk.ias.types.GetItemsPreviewsResponse;
import pl.edu.pk.ias.types.GetItemsRequest;
import pl.edu.pk.ias.types.GetItemsResponse;
import pl.edu.pk.ias.types.LoginRequest;
import pl.edu.pk.ias.types.LoginResponse;
import pl.edu.pk.ias.types.LogoutRequest;
import pl.edu.pk.ias.types.LogoutResponse;
import pl.edu.pk.ias.types.ObjectFactory;
import pl.edu.pk.ias.types.PublishRequest;
import pl.edu.pk.ias.types.PublishResponse;
import pl.edu.pk.ias.types.RemoveRequest;
import pl.edu.pk.ias.types.RemoveResponse;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.4-b01 Generated
 * source version: 2.2
 * 
 */
@WebService( name = "SocialServiceIntegration",
             targetNamespace = "http://pk.edu.pl/ias/socialserviceintegration" )
@SOAPBinding( parameterStyle = SOAPBinding.ParameterStyle.BARE )
@XmlSeeAlso( {ObjectFactory.class} )
public interface SocialServiceIntegration
{

    /**
     * 
     * @param parameters
     * @return returns pl.edu.pk.ias.types.RemoveResponse
     * @throws TokenExpiredFault
     */
    @WebMethod( action = "http://pk.edu.pl/ias/socialserviceintegration/action/remove" )
    @WebResult( name = "removeResponse",
                targetNamespace = "http://pk.edu.pl/ias/types",
                partName = "parameters" )
    @Action( input = "http://pk.edu.pl/ias/socialserviceintegration/action/remove",
             output = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/removeResponse",
             fault = {@FaultAction( className = TokenExpiredFault.class,
                                    value = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/remove/Fault/TokenExpiredFault" )} )
    public RemoveResponse remove( @WebParam( name = "removeRequest",
                                             targetNamespace = "http://pk.edu.pl/ias/types",
                                             partName = "parameters" ) RemoveRequest parameters ) throws TokenExpiredFault;

    /**
     * 
     * @param parameters
     * @return returns pl.edu.pk.ias.types.PublishResponse
     * @throws TokenExpiredFault
     */
    @WebMethod( action = "http://pk.edu.pl/ias/socialserviceintegration/action/publish" )
    @WebResult( name = "publishResponse",
                targetNamespace = "http://pk.edu.pl/ias/types",
                partName = "parameters" )
    @Action( input = "http://pk.edu.pl/ias/socialserviceintegration/action/publish",
             output = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/publishResponse",
             fault = {@FaultAction( className = TokenExpiredFault.class,
                                    value = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/publish/Fault/TokenExpiredFault" )} )
    public PublishResponse publish( @WebParam( name = "publishRequest",
                                               targetNamespace = "http://pk.edu.pl/ias/types",
                                               partName = "parameters" ) PublishRequest parameters ) throws TokenExpiredFault;

    /**
     * 
     * @param parameters
     * @return returns pl.edu.pk.ias.types.LoginResponse
     * @throws UserNotExistFault
     * @throws IncorrectPasswordFault
     */
    @WebMethod( action = "http://pk.edu.pl/ias/socialserviceintegration/action/login" )
    @WebResult( name = "loginResponse",
                targetNamespace = "http://pk.edu.pl/ias/types",
                partName = "parameters" )
    @Action( input = "http://pk.edu.pl/ias/socialserviceintegration/action/login",
             output = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/loginResponse",
             fault = {@FaultAction( className = IncorrectPasswordFault.class,
                                    value = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/login/Fault/IncorrectPasswordFault" ),
                      @FaultAction( className = UserNotExistFault.class,
                                    value = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/login/Fault/UserNotExistFault" )} )
    public LoginResponse login( @WebParam( name = "loginRequest",
                                           targetNamespace = "http://pk.edu.pl/ias/types",
                                           partName = "parameters" ) LoginRequest parameters ) throws IncorrectPasswordFault,
                                                                                              UserNotExistFault;

    /**
     * 
     * @param parameters
     * @return returns pl.edu.pk.ias.types.LogoutResponse
     */
    @WebMethod( action = "http://pk.edu.pl/ias/socialserviceintegration/action/logout" )
    @WebResult( name = "logoutResponse",
                targetNamespace = "http://pk.edu.pl/ias/types",
                partName = "parameters" )
    @Action( input = "http://pk.edu.pl/ias/socialserviceintegration/action/logout",
             output = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/logoutResponse" )
    public LogoutResponse logout( @WebParam( name = "logoutRequest",
                                             targetNamespace = "http://pk.edu.pl/ias/types",
                                             partName = "parameters" ) LogoutRequest parameters );

    /**
     * 
     * @param parameters
     * @return returns pl.edu.pk.ias.types.GetItemsPreviewsResponse
     * @throws TokenExpiredFault
     */
    @WebMethod( action = "http://pk.edu.pl/ias/socialserviceintegration/action/getItemsPreviews" )
    @WebResult( name = "getItemsPreviewsResponse",
                targetNamespace = "http://pk.edu.pl/ias/types",
                partName = "parameters" )
    @Action( input = "http://pk.edu.pl/ias/socialserviceintegration/action/getItemsPreviews",
             output = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/getItemsPreviewsResponse",
             fault = {@FaultAction( className = TokenExpiredFault.class,
                                    value = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/getItemsPreviews/Fault/TokenExpiredFault" )} )
    public GetItemsPreviewsResponse getItemsPreviews( @WebParam( name = "getItemsPreviewsRequest",
                                                                 targetNamespace = "http://pk.edu.pl/ias/types",
                                                                 partName = "parameters" ) GetItemsPreviewsRequest parameters ) throws TokenExpiredFault;

    /**
     * 
     * @param parameters
     * @return returns pl.edu.pk.ias.types.AccountsResponse
     * @throws TokenExpiredFault
     */
    @WebMethod( action = "http://pk.edu.pl/ias/socialserviceintegration/action/accounts" )
    @WebResult( name = "accountsResponse",
                targetNamespace = "http://pk.edu.pl/ias/types",
                partName = "parameters" )
    @Action( input = "http://pk.edu.pl/ias/socialserviceintegration/action/accounts",
             output = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/accountsResponse",
             fault = {@FaultAction( className = TokenExpiredFault.class,
                                    value = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/accounts/Fault/TokenExpiredFault" )} )
    public AccountsResponse accounts( @WebParam( name = "accountsRequest",
                                                 targetNamespace = "http://pk.edu.pl/ias/types",
                                                 partName = "parameters" ) AccountsRequest parameters ) throws TokenExpiredFault;

    /**
     * 
     * @param parameters
     * @return returns pl.edu.pk.ias.types.GetItemsResponse
     * @throws TokenExpiredFault
     */
    @WebMethod( action = "http://pk.edu.pl/ias/socialserviceintegration/action/getItems" )
    @WebResult( name = "getItemsResponse",
                targetNamespace = "http://pk.edu.pl/ias/types",
                partName = "parameters" )
    @Action( input = "http://pk.edu.pl/ias/socialserviceintegration/action/getItems",
             output = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/getItemsResponse",
             fault = {@FaultAction( className = TokenExpiredFault.class,
                                    value = "http://pk.edu.pl/ias/socialserviceintegration/SocialServiceIntegration/getItems/Fault/TokenExpiredFault" )} )
    public GetItemsResponse getItems( @WebParam( name = "getItemsRequest",
                                                 targetNamespace = "http://pk.edu.pl/ias/types",
                                                 partName = "parameters" ) GetItemsRequest parameters ) throws TokenExpiredFault;

}
