
package pl.edu.pk.ias.socialserviceintegration;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import pl.edu.pk.ias.types.AccountsRequest;
import pl.edu.pk.ias.types.AccountsResponse;
import pl.edu.pk.ias.types.GetItemsPreviewsRequest;
import pl.edu.pk.ias.types.GetItemsPreviewsResponse;
import pl.edu.pk.ias.types.GetItemsRequest;
import pl.edu.pk.ias.types.GetItemsResponse;
import pl.edu.pk.ias.types.LoginRequest;
import pl.edu.pk.ias.types.LoginResponse;
import pl.edu.pk.ias.types.LogoutRequest;
import pl.edu.pk.ias.types.LogoutResponse;
import pl.edu.pk.ias.types.ObjectFactory;
import pl.edu.pk.ias.types.PublishRequest;
import pl.edu.pk.ias.types.PublishResponse;


/**
 * Operacje pozwalające na integrację pomiędzy serwisami społecznościowymi
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SocialServiceIntegration", targetNamespace = "http://pk.edu.pl/ias/socialserviceintegration")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SocialServiceIntegration {


    /**
     * Logowanie do aplikacji
     * 
     * @param parameters
     * @return
     *     returns pl.edu.pk.ias.types.LoginResponse
     * @throws InvalidLoginOrPasswordFault
     */
    @WebMethod(action = "http://pk.edu.pl/ias/socialserviceintegration/action/login")
    @WebResult(name = "loginResponse", targetNamespace = "http://pk.edu.pl/ias/types", partName = "parameters")
    public LoginResponse login(
        @WebParam(name = "loginRequest", targetNamespace = "http://pk.edu.pl/ias/types", partName = "parameters")
        LoginRequest parameters)
        throws InvalidLoginOrPasswordFault
    ;

    /**
     * Wylogowanie z aplikacji
     * 
     * @param parameters
     * @return
     *     returns pl.edu.pk.ias.types.LogoutResponse
     * @throws TokenExpiredFault
     */
    @WebMethod(action = "http://pk.edu.pl/ias/socialserviceintegration/action/logout")
    @WebResult(name = "logoutResponse", targetNamespace = "http://pk.edu.pl/ias/types", partName = "parameters")
    public LogoutResponse logout(
        @WebParam(name = "logoutRequest", targetNamespace = "http://pk.edu.pl/ias/types", partName = "parameters")
        LogoutRequest parameters)
        throws TokenExpiredFault
    ;

    /**
     * Pobranie list kont serwisów społecznościowych, dla zalogowanego użytkownika
     * 
     * @param parameters
     * @return
     *     returns pl.edu.pk.ias.types.AccountsResponse
     * @throws ServiceUnavailableFault
     * @throws BadRequestFault
     * @throws TokenExpiredFault
     */
    @WebMethod(action = "http://pk.edu.pl/ias/socialserviceintegration/action/accounts")
    @WebResult(name = "accountsResponse", targetNamespace = "http://pk.edu.pl/ias/types", partName = "parameters")
    public AccountsResponse accounts(
        @WebParam(name = "accountsRequest", targetNamespace = "http://pk.edu.pl/ias/types", partName = "parameters")
        AccountsRequest parameters)
        throws BadRequestFault, ServiceUnavailableFault, TokenExpiredFault
    ;

    /**
     * Publikacja treści w serwisie społecznościowym
     * 
     * @param parameters
     * @return
     *     returns pl.edu.pk.ias.types.PublishResponse
     * @throws BadRequestFault
     * @throws ServiceUnavailableFault
     * @throws TokenExpiredFault
     */
    @WebMethod(action = "http://pk.edu.pl/ias/socialserviceintegration/action/publish")
    @WebResult(name = "publishResponse", targetNamespace = "http://pk.edu.pl/ias/types", partName = "parameters")
    public PublishResponse publish(
        @WebParam(name = "publishRequest", targetNamespace = "http://pk.edu.pl/ias/types", partName = "parameters")
        PublishRequest parameters)
        throws BadRequestFault, ServiceUnavailableFault, TokenExpiredFault
    ;

    /**
     * Pobranie listy dostępnych elementów ( ID + Name). Element jest bytem różniącym się dla każdego serwisu społecznościowego
     * 
     * @param parameters
     * @return
     *     returns pl.edu.pk.ias.types.GetItemsPreviewsResponse
     * @throws ServiceUnavailableFault
     * @throws BadRequestFault
     * @throws TokenExpiredFault
     */
    @WebMethod(action = "http://pk.edu.pl/ias/socialserviceintegration/action/getItemsPreviews")
    @WebResult(name = "getItemsPreviewsResponse", targetNamespace = "http://pk.edu.pl/ias/types", partName = "parameters")
    public GetItemsPreviewsResponse getItemsPreviews(
        @WebParam(name = "getItemsPreviewsRequest", targetNamespace = "http://pk.edu.pl/ias/types", partName = "parameters")
        GetItemsPreviewsRequest parameters)
        throws BadRequestFault, ServiceUnavailableFault, TokenExpiredFault
    ;

    /**
     * Pobranie kompletnych elementów. Element jest bytem różniącym się dla każdego serwisu społecznościowego
     * 
     * @param parameters
     * @return
     *     returns pl.edu.pk.ias.types.GetItemsResponse
     * @throws BadRequestFault
     * @throws ServiceUnavailableFault
     * @throws TokenExpiredFault
     */
    @WebMethod(action = "http://pk.edu.pl/ias/socialserviceintegration/action/getItems")
    @WebResult(name = "getItemsResponse", targetNamespace = "http://pk.edu.pl/ias/types", partName = "parameters")
    public GetItemsResponse getItems(
        @WebParam(name = "getItemsRequest", targetNamespace = "http://pk.edu.pl/ias/types", partName = "parameters")
        GetItemsRequest parameters)
        throws BadRequestFault, ServiceUnavailableFault, TokenExpiredFault
    ;

}
